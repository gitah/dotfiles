" Do this so this .vimrc can be used cross-platform
:set fileformat=unix

set nocompatible
let mapleader=","

" Install Plugins
filetype off                   " required!
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'
Bundle 'scrooloose/nerdtree'
Bundle 'scrooloose/nerdcommenter'
Bundle 'ervandew/supertab'
Bundle 'thisivan/vim-bufexplorer'
Bundle 'kien/ctrlp.vim'

" Use tabs instead of spaces 
set smartindent
"set ci pi
set tabstop=4
set shiftwidth=4
set expandtab

" Searching
set incsearch ignorecase smartcase hlsearch
set textwidth=80 

" Press space to clear search highlighting and any message already displayed.
nnoremap <silent> <Space> :silent noh<Bar>echo<CR>

" Colorscheme
if has('gui_running')
    colorscheme wombat
else
    colorscheme koehler
endif

"" Misc configs
syntax on
set number
set nowrap

"set autochdir
"autocmd BufEnter * silent! lcd %:p:h

"wildmenu
set wildmenu
set wildmode=list:longest,full

"" Get rid of those annoying swap files
set nobackup
set nowritebackup
set noswapfile

".vimrc 
map <F1> :e $MYVIMRC<CR>
map <F2> :source $MYVIMRC<CR>:echoe "Vimrc Reloaded!!!"<CR> 

"tabs
nnoremap <F7> :tabp<CR>
nnoremap <F8> :tabn<CR>

nnoremap <C-n> :bn<CR>
nnoremap <C-p> :bp<CR>

map <Leader>t :tabe<CR>

" How to keep your sanity when editing long text sentences in Vim
noremap j gj
noremap k gk

" Smart way to move between splits
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l


"--- Plugins ---"
" Enable filetype plugin
filetype plugin on
filetype indent on

"NERDTree
map <Leader>f :NERDTreeToggle %:p:h<CR>
let NERDTreeQuitOnOpen=1

"Ctrl-p
map <Leader>p :CtrlP<CR>

"--- GUI specific ---"
:set guioptions-=m  "remove menu bar
:set guioptions-=T  "remove toolbar
:set guioptions-=L  "remove left-hand scroll bar
:set guioptions-=r  "remove right-hand scroll bar

"--- File type specific ---"
" HTML & XML
autocmd FileType html,xhtml,xml setlocal expandtab shiftwidth=2 tabstop=2 softtabstop=2
autocmd BufNewFile,BufRead *.json set ft=javascript

"--- Aliases ---"
abbreviate ipdb_ import ipdb; ipdb.set_trace()
